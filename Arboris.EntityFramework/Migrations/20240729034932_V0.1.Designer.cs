// <auto-generated />
using System;
using Arboris.EntityFramework.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arboris.EntityFramework.Migrations
{
    [DbContext(typeof(ArborisDbContext))]
    [Migration("20240729034932_V0.1")]
    partial class V01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.CppLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EndLine")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StartLine")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NodeId")
                        .IsUnique();

                    b.ToTable("Cxx_CppLocations");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.HeaderLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EndLine")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StartLine")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NodeId")
                        .IsUnique();

                    b.ToTable("Cxx_HeaderLocations");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.HppLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EndLine")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StartLine")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NodeId")
                        .IsUnique();

                    b.ToTable("Cxx_HppLocations");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CursorKindSpelling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CxType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Spelling")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Cxx_Nodes");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeDependency", b =>
                {
                    b.Property<Guid>("NodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NodeId", "FromId");

                    b.HasIndex("FromId")
                        .IsUnique();

                    b.ToTable("Cxx_NodeDependencies");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeMember", b =>
                {
                    b.Property<Guid>("NodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NodeId", "MemberId");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("Cxx_NodeMembers");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeType", b =>
                {
                    b.Property<Guid>("NodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NodeId", "TypeId");

                    b.HasIndex("TypeId")
                        .IsUnique();

                    b.ToTable("Cxx_NodeTypes");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.CppLocation", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Node")
                        .WithOne("CppLocation")
                        .HasForeignKey("Arboris.EntityFramework.EntityFrameworkCore.CXX.CppLocation", "NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.HeaderLocation", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Node")
                        .WithOne("HeaderLocation")
                        .HasForeignKey("Arboris.EntityFramework.EntityFrameworkCore.CXX.HeaderLocation", "NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.HppLocation", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Node")
                        .WithOne("HppLocation")
                        .HasForeignKey("Arboris.EntityFramework.EntityFrameworkCore.CXX.HppLocation", "NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.Project", "Project")
                        .WithMany("CxxNodes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeDependency", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "From")
                        .WithOne()
                        .HasForeignKey("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeDependency", "FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Node")
                        .WithMany("Dependencies")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeMember", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Member")
                        .WithOne()
                        .HasForeignKey("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeMember", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Node")
                        .WithMany("Members")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeType", b =>
                {
                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Node")
                        .WithMany("Types")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", "Type")
                        .WithOne()
                        .HasForeignKey("Arboris.EntityFramework.EntityFrameworkCore.CXX.NodeType", "TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.CXX.Node", b =>
                {
                    b.Navigation("CppLocation");

                    b.Navigation("Dependencies");

                    b.Navigation("HeaderLocation");

                    b.Navigation("HppLocation");

                    b.Navigation("Members");

                    b.Navigation("Types");
                });

            modelBuilder.Entity("Arboris.EntityFramework.EntityFrameworkCore.Project", b =>
                {
                    b.Navigation("CxxNodes");
                });
#pragma warning restore 612, 618
        }
    }
}
